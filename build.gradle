plugins {
    id "java"
    id "java-library"
    id "fabric-loom" version "1.9-SNAPSHOT"
    id ("com.modrinth.minotaur") version "2.+"
    id ("com.matthewprenger.cursegradle") version "1.4.0"
}

repositories {
    maven { name "Translation"; url "https://maven.nucleoid.xyz" }
    maven { name "Permission"; url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { name "Floodgate Api"; url "https://repo.opencollab.dev/main" }
}

base.archivesName = "${project.mod_id}-mc${project.minecraft_version}"
version = "${project.mod_version}"

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

loom {
    accessWidenerPath = file("src/main/resources/easyauth.accesswidener")
    serverOnlyMinecraftJar()
    log4jConfigs.from(file("log4j.xml"))
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Translations
    include modImplementation("xyz.nucleoid:server-translations-api:${project.server_translations_version}")

    // Permissions
    include modImplementation("me.lucko:fabric-permissions-api:${project.fabric_permissions_version}")

    // Mods
    modCompileOnly "org.geysermc.floodgate:api:${floodgate_api_version}"

    // Password hashing
    // Argon2
    include implementation("de.mkammerer:argon2-jvm:${argon2_version}")
    include implementation("de.mkammerer:argon2-jvm-nolibs:${argon2_version}")

    // BCrypt
    include implementation("at.favre.lib:bcrypt:${bcrypt_version}")
    include implementation("at.favre.lib:bytes:${bytes_version}")

    // Storage
    // LevelDB database
    include implementation("org.iq80.leveldb:leveldb:${leveldb_version}")
    include implementation("org.iq80.leveldb:leveldb-api:${leveldb_version}")

    // MongoDB driver
    include implementation("org.mongodb:mongodb-driver-sync:${mongodb_version}")
    include implementation("org.mongodb:mongodb-driver-core:${mongodb_version}")
    include implementation("org.mongodb:bson:${mongodb_version}")

    // MySQL driver
    include implementation ("com.mysql:mysql-connector-j:${mysql_version}")

    // Hocon config
    include implementation("org.spongepowered:configurate-core:${hocon_version}")
    include implementation("org.spongepowered:configurate-hocon:${hocon_version}")
    include implementation("org.apache.commons:commons-text:${commons_text_version}")
    include implementation("com.typesafe:config:${typesafe_config_version}")
    include implementation("io.leangen.geantyref:geantyref:${geantyref_version}")

    // JNA lib
    include "net.java.dev.jna:jna:${jna_version}"
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(21)
}

java {
    withSourcesJar()
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

jar {
    from "LICENCE"
}

processResources {
    inputs.property "id", project.mod_id
    inputs.property "name", project.mod_name
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand(["id": project.mod_id, "name": project.mod_name, "version": project.version])
    }
}

modrinth {
    token.set(System.getenv("MODRINTH_TOKEN"))
    projectId.set("aZj58GfX")
    versionNumber.set("${project.version}")
    versionName = "[1.21.2, 1.21.3] ${project.version}"
    versionType = "beta"
    changelog.set("Release notes:\nhttps://github.com/NikitaCartes/EasyAuth/releases/tag/${project.version}\n\nChangelog:\nhttps://github.com/NikitaCartes/EasyAuth/tree/HEAD/CHANGELOG.md")
    uploadFile = remapJar
    gameVersions.addAll("1.21.2", "1.21.3")
    loaders = ["fabric", "quilt"]
    dependencies {
        required.project("P7dR8mSH") // Fabric API
    }
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN") ?: ""
    project {
        id = "503866"
        changelogType = "markdown"
        changelog = "Release notes:\nhttps://github.com/NikitaCartes/EasyAuth/releases/tag/${project.version}\n\nChangelog:\nhttps://github.com/NikitaCartes/EasyAuth/tree/HEAD/CHANGELOG.md"
        releaseType = "beta"

        addGameVersion("Fabric")
        addGameVersion("Quilt")

        addGameVersion("Java 21")

        addGameVersion("1.21.2")
        addGameVersion("1.21.3")

        mainArtifact(remapJar) {
            displayName = "[1.21.2, 1.21.3] ${project.version}"
            relations {
                requiredDependency("fabric-api")
                embeddedLibrary 'server-translation-api'
            }
        }
    }
    options {
        javaVersionAutoDetect = false
        javaIntegration = false
        forgeGradleIntegration = false
    }
}

tasks.register("publish") {
    dependsOn("modrinth")
    dependsOn("curseforge")
}